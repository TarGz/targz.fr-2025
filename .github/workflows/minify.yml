name: Minify HTML and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Build with Jekyll
      run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
      env:
        JEKYLL_ENV: production
        
    - name: Install ImageMagick (Ubuntu APT)
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick
        convert -version
      
    - name: Generate responsive images
      run: |
        echo "Generating responsive images..."
        
        # Count original images
        original_count=$(find ./_site/assets/images -name "*-preview.webp" | wc -l)
        echo "Found $original_count original images"
        
        # Generate responsive versions
        find ./_site/assets/images -name "*-preview.webp" -type f | while read image; do
          # Generate mobile version (400x400)
          mobile_name="${image//-preview.webp/-mobile.webp}"
          convert "$image" -resize 400x400^ -gravity center -extent 400x400 "$mobile_name"
          echo "✓ Created: $(basename $mobile_name)"
          
          # Generate tablet version (600x600)
          tablet_name="${image//-preview.webp/-tablet.webp}"
          convert "$image" -resize 600x600^ -gravity center -extent 600x600 "$tablet_name"
          echo "✓ Created: $(basename $tablet_name)"
        done
        
        # Verify generation
        mobile_count=$(find ./_site/assets/images -name "*-mobile.webp" | wc -l)
        tablet_count=$(find ./_site/assets/images -name "*-tablet.webp" | wc -l)
        echo "Generated: $mobile_count mobile, $tablet_count tablet versions"
        
        # List first 5 generated files for verification
        echo "Sample mobile images:"
        find ./_site/assets/images -name "*-mobile.webp" | head -5
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install minifiers
      run: |
        npm install -g html-minifier-terser
        npm install -g clean-css-cli
        npm install -g uglify-js
      
    - name: Minify CSS files
      run: |
        find ./_site -name "*.css" -type f | while read file; do
          echo "Minifying CSS: $file"
          cleancss -o "$file" "$file"
        done
        
    - name: Minify JS files
      run: |
        find ./_site -name "*.js" -type f | while read file; do
          echo "Minifying JS: $file"
          uglifyjs "$file" -o "$file" -c -m || echo "Skipped $file (might be already minified)"
        done
        
    - name: Minify HTML files
      run: |
        find ./_site -name "*.html" -type f | while read file; do
          echo "Minifying: $file"
          html-minifier-terser \
            --collapse-whitespace \
            --remove-redundant-attributes \
            --remove-script-type-attributes \
            --remove-style-link-type-attributes \
            --use-short-doctype \
            --minify-css true \
            --minify-js true \
            --output "$file" "$file"
        done
        
    - name: Verify minification
      run: |
        echo "Checking a sample file:"
        head -3 ./_site/index.html
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4